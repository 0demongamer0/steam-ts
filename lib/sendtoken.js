module.exports = function(nickname, senderID, token, currentlyVerifying, steamClient, teamspeakClient, config) {
    var async = require('async');

    async.waterfall([
        function(callback) {
            //  Search for nickname and get client id.

            teamspeakClient.send("clientfind", {pattern: nickname}, function (err, response) {
                if (typeof err !== "undefined") {
                    //  If err 512 the user wasnt found, other errors might be on the server side instead aka LOGGED
                    //  internal errors usually mean server side errors in this case, if you don't know whats wrong:
                    //  please report them at https://github.com/nikitavondel/steam-ts
                    if (err.id == 512) {
                        steamClient.chatMessage(senderID, "User was not found on the TeamSpeak server, use !verify to restart the process.");
                        delete currentlyVerifying[senderID.accountid];
                        callback(err);
                    } else {
                        console.log(err);
                        console.log("Internal error " + nickname + " not found.");
                        steamClient.chatMessage(senderID, "Something went wrong, either retry !verify or contact an admin please!");
                        delete currentlyVerifying[senderID.accountid];
                        callback(err);
                    }
                } else {
                    //  If user was found, get their clientid
                    var user_clid = response.clid;
                    console.log(nickname + " was found, getting group...");
                    //if there are multiple results tell the user to temporarily change their name.
                    if (response.isArray) {
                        console.log(nickname + " nickname not specific enough");
                        steamClient.chatMessage(senderID, "Too many users with the same name, please temporarily adjust your name and restart this verification process using !retry.");
                        delete currentlyVerifying[senderID.accountid];
                        callback("Too many results.");
                    } else {
                        callback(null, user_clid);
                    }
                }
            })
        },
        function(user_clid, callback) {
            //  Get their groupID

            teamspeakClient.send("clientinfo", {clid: user_clid}, function (err, response) {
                if (typeof err !== "undefined") {
                    console.log("Internal error, verification failed.");
                    callback(err);
                    steamClient.chatMessage(senderID, "Something went wrong, either retry !verify or contact an admin please!");
                    delete currentlyVerifying[senderID.accountid];
                } else {
                    //  Group found , run simple logic to check whether they are already verified or not
                    if (response.client_servergroups == config.defaultrankid) {
                        //  Start verification process.
                        callback(null, user_clid);
                    } else {
                        steamClient.chatMessage(senderID, "You are already verified.");
                        callback(true);
                    }
                }
            })
        },
        function(user_clid, callback) {
            var sendersteamid3 = "[U:1:" + senderID.accountid + "]";
            var sendmessage = "Random token: " + token + "\nGenerated by: " + sendersteamid3 + "\nThis is an automated message, if you didn't use !verify please report the above steamID3 to a staff member.";
            teamspeakClient.send("sendtextmessage", {targetmode: 1, target: user_clid, msg: sendmessage}, function (err) {
                if (typeof err !== "undefined") {
                    steamClient.chatMessage(senderID, "Something went wrong, either retry !verify or contact an admin please!");
                    delete currentlyVerifying[senderID.accountid];
                    callback(err);
                } else {
                    currentlyVerifying[senderID.accountid].clid = user_clid;
                    callback(null);
                }
            });
        }
    ], function (err) {
        if (err != null) {
            delete currentlyVerifying[senderID.accountid];
        } else {
            steamClient.chatMessage(senderID, "We have sent you a message in TeamSpeak including a random token. Please copy paste the specified token here:");
        }
    });
};